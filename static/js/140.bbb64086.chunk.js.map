{"version":3,"file":"static/js/140.bbb64086.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","redux/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/Fillter/Fillter.jsx","components/Loader/Loader.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Title = styled.h2`\n  color: rgb(100, 100, 100);\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { Title, Container } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Container>\n      {title && <Title>{title}</Title>}\n      {children}\n    </Container>\n  );\n};\n\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  const normalizeFilter = filter.toLowerCase();\n\n  if (normalizeFilter === '') {\n    return contacts;\n  }\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeFilter)\n  );\n};\n\n","import styled from 'styled-components';\n\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 280px;\n  padding: 20px;\n  margin: 0 auto;\n  font-size: 16px;\n  border: 1px solid rgb(222, 222, 222);\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  width: 100%;\n  margin-bottom: 8px;\n  margin-top: 4px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-top: 20px;\n  margin-right: auto;\n  margin-left: auto;\n  width: 120px;\n  height: 28px;\n  font-size: 12px;\n  font-weight: 500;\n  text-transform: uppercase;\n  background-color: rgb(230, 230, 230);\n\n  border-radius: 8px;\n  cursor: pointer;\n\n  box-shadow: 0px 2px 3px 0px rgba(62, 118, 120, 1);\n  transition: transform 100ms ease-in-out;\n\n  :hover {\n    box-shadow: 1px 3px 3px 0px rgba(150, 150, 150, 1);\n    transform: translate(-1px, -1px);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { Button, Box, TextField } from '@mui/material';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport PhoneIphoneIcon from '@mui/icons-material/PhoneIphone';\n\nimport { selectContacts, selectIsLoading } from 'redux/selectors';\nimport { addContact } from 'redux/operation';\nimport { Form } from './ContactForm.styled';\n\nexport function ContactForm({ onSubmit }) {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleSubmit = event => {\n    try {\n      event.preventDefault();\n      const name = event.target.elements.name.value;\n      const inputNumber = event.target.elements.number.value;\n      let number = inputNumber;\n      if (inputNumber.length <= 7) {\n        number =\n          inputNumber.substr(0, 3) +\n          '-' +\n          inputNumber.substr(3, 2) +\n          '-' +\n          inputNumber.substr(4, 2);\n      } else if (inputNumber.length > 7 && inputNumber.length <= 10) {\n        number =\n          inputNumber.substr(0, 3) +\n          '-' +\n          inputNumber.substr(3, 3) +\n          '-' +\n          inputNumber.substr(6, 4);\n      } else if (inputNumber.length > 10) {\n        number =\n          inputNumber.substr(0, 3) +\n          '-' +\n          inputNumber.substr(3, 3) +\n          '-' +\n          inputNumber.substr(6, 4) +\n          '-' +\n          inputNumber.substr(10, 4);\n      }\n\n      const dublicateName = contacts.find(contact => contact.name === name);\n      const dublicateNumber = contacts.find(\n        contact => contact.phone === number\n      );\n\n      if (dublicateName) {\n        toast.error(`${name} is already in contacts.`);\n        event.target.reset();\n        return;\n      }\n\n      if (dublicateNumber) {\n        toast.error(`Contact with number ${number} is already in contacts.`);\n        event.target.reset();\n        return;\n      }\n\n      onSubmit();\n      dispatch(addContact({ name, number }));\n      event.target.reset();\n      toast.success(`Contact ${name} is added in contacts.`);\n    } catch (error) {\n      toast.error(`Something wrong, try again.`);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\n        <AccountCircle sx={{ color: 'action.active', mr: 1, mb: 1 }} />\n        <TextField\n          label=\"name\"\n          variant=\"standard\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Will Smith\"\n          inputProps={{\n            inputMode: 'numeric',\n            pattern:\n              \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n          }}\n          margin=\"normal\"\n          required\n        />\n      </Box>\n      <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\n        <PhoneIphoneIcon sx={{ color: 'action.active', mr: 1, mb: 1 }} />\n        <TextField\n          label=\"number\"\n          variant=\"standard\"\n          type=\"text\"\n          name=\"number\"\n          placeholder=\"123-456-7890\"\n          inputProps={{\n            inputMode: 'numeric',\n            pattern: '[0-9]*',\n          }}\n          margin=\"normal\"\n          required\n        />\n      </Box>\n      <Button\n        type=\"submit\"\n        disabled={isLoading}\n        variant=\"contained\"\n        size=\"small\"\n        sx={{ mt: 4 }}\n      >\n        Add contact\n      </Button>\n    </Form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { IconButton, Box, Link, Container } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PhoneIphoneIcon from '@mui/icons-material/PhoneIphone';\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\n\nimport { deleteContact } from 'redux/operation';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    try {\n      dispatch(deleteContact(id));\n      toast.success(`Contact ${name} has been removed from the contacts.`);\n    } catch (error) {}\n    toast.error(`Something wrong, try again.`);\n  };\n\n  const LinkTo = `tel:${number}`;\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n      }}\n    >\n      <Container sx={{ m: 1 }}>\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n          }}\n        >\n          <AccountBoxIcon sx={{ color: 'action.active', mr: 1 }} />\n          {name}:\n        </Box>\n        <Link\n          href={LinkTo}\n          underline=\"hover\"\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n          }}\n        >\n          <PhoneIphoneIcon sx={{ color: 'action.active', mr: 1 }} />\n          {number}\n        </Link>\n      </Container>\n      <IconButton\n        type=\"button\"\n        onClick={() => handleDelete(id)}\n        variant=\"outlined\"\n        size=\"Normal\"\n        sx={{ color: 'action.active', ml: 4 }}\n      >\n        <DeleteIcon />\n      </IconButton>\n    </Box>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  max-width: 420px;\n  padding: 0 10px;\n`;\n\nexport const Item = styled.li`\n  list-style: none;\n  border-bottom: 2px solid rgb(212, 212, 212);\n  margin-bottom: 8px;\n`;\n","import { useSelector } from 'react-redux';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { List, Item } from './ContactsList.styled';\nimport { selectVisibleContacts } from 'redux/selectors';\n\nexport const ContactsList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <>\n      {visibleContacts.length > 0 && (\n        <List>\n          {visibleContacts.map(({ id, name, number }) => {\n            return (\n              <Item key={id}>\n                <ContactItem id={id} name={name} number={number} />\n              </Item>\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { Box, TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const query = event.target.value;\n\n    dispatch(setFilter(query));\n  };\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\n      <TextField\n        label=\"Find contacts by name\"\n        // variant=\"standard\"\n        type=\"text\"\n        onChange={handleChange}\n      />\n    </Box>\n  );\n};\n","import { RotatingLines } from 'react-loader-spinner';\nimport { Container } from '@mui/material';\n\nexport const Loader = () => {\n  return (\n    <Container\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        padding: '2px',\n      }}\n    >\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"52\"\n        visible={true}\n      />\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: space-around;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IconButton, Box } from '@mui/material';\nimport LibraryAddIcon from '@mui/icons-material/LibraryAdd';\nimport { Section } from 'components/Section/Section';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Fillter/Fillter';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchContacts } from 'redux/operation';\nimport { selectError, selectIsLoading, selectContacts } from 'redux/selectors';\nimport { Container } from \"./ContactsPage.styled\";\n\nconst ContactsView = () => {\n  const [addContact, setAddContact] = useState(false);\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    setAddContact(false);\n  }, [dispatch]);\n\n  const handleAddContact = () => {\n    setAddContact(true);\n  };\n\n  const closeForm = () => {\n    setAddContact(false);\n  };\n\n  return (\n    <Container>\n      <Box >\n        {contacts.length > 0 ? (\n          <Section title=\"Your contacts\">\n            {!isLoading && !error && <Filter />}\n            {isLoading && !error && <Loader />}\n            <ContactsList />\n          </Section>\n        ) : (\n          <Section title=\"You have no contacts\">\n            {isLoading && !error && <Loader />}\n          </Section>\n        )}\n      </Box>\n      {\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'start',\n          }}\n        >\n          {!addContact && (\n            <Box sx={{ mt: 2 }}>\n              <Box\n                sx={{\n                  display: 'inline-block',\n                  fontSize: 24,\n                  fontWeight: 700,\n                  color: 'rgb(100, 100, 100)',\n                  mr: 4,\n                }}\n              >\n                Add contact\n              </Box>\n              <IconButton\n                type=\"button\"\n                onClick={handleAddContact}\n                sx={{ mt: 0, p: 0 }}\n              >\n                <LibraryAddIcon sx={{ fontSize: 40 }} />\n              </IconButton>\n            </Box>\n          )}\n\n          {addContact && (\n            <Section title=\"Phonebook\">\n              <ContactForm onSubmit={closeForm} />\n            </Section>\n          )}\n        </Box>\n      }\n    </Container>\n  );\n};\n\nexport default ContactsView;\n"],"names":["Container","styled","Title","Section","title","children","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","filter","selectFilter","normalizeFilter","toLowerCase","contact","name","includes","Form","ContactForm","onSubmit","dispatch","useDispatch","useSelector","event","preventDefault","target","elements","value","inputNumber","number","length","substr","dublicateName","find","dublicateNumber","phone","toast","reset","addContact","Box","sx","display","alignItems","AccountCircle","color","mr","mb","TextField","label","variant","type","placeholder","inputProps","inputMode","pattern","margin","required","PhoneIphone","Button","disabled","size","mt","ContactItem","id","LinkTo","justifyContent","m","AccountBox","Link","href","underline","IconButton","onClick","deleteContact","handleDelete","ml","Delete","List","Item","ContactsList","visibleContacts","map","Filter","onChange","query","setFilter","Loader","padding","strokeColor","strokeWidth","animationDuration","width","visible","useState","setAddContact","useEffect","fetchContacts","fontSize","fontWeight","p","LibraryAdd"],"sourceRoot":""}